version: 3

tasks:
  tidy:
    cmds:
      - go mod tidy

  run:
    cmds:
      - go run cmd/server/main.go

  dev:
    cmds:
      - wgo -file .go task run

  debug:
    cmds:
      - task run --watch

  db:
    cmds:
      - go generate ./ent

  db:new:
    cmds:
      - go run -mod=mod entgo.io/ent/cmd/ent new {{.CLI_ARGS}}

  lint:
    cmds:
      - golangci-lint run --tests=false

  format:
    cmds:
      - gofmt -w -s .

  test:
    cmds:
      - gotestsum --format pkgname {{.ARGS}} -- {{.TEST_ARGS}} ./...

  test:watch:
    cmds:
      - task: test
        vars:
          ARGS: --watch

  test:cover:
    cmds:
      - task: test
        vars:
          TEST_ARGS: -coverprofile=out/coverage.out

  test:watch:cover:
    cmds:
      - task: test
        vars:
          TEST_ARGS: -coverprofile=out/coverage.out
          ARGS: --watch

  test:report:
    deps: [test:cover]
    cmds:
      - go tool cover -html=out/coverage.out

  build:
    cmds:
      - go build -o bin/{{default "server" .NAME}} cmd/server/main.go

  build:win:
    cmds:
      - task: build
        vars:
          NAME: server.exe
    env:
      GOOS: windows
      GOARCH: amd64

  docker:build:
    deps: [build]
    cmds:
      - docker build -t pals-server .

  docker:run:
    dotenv: [.env]
    cmds:
      - docker run -p $PORT:$PORT --env-file .env pals-server

  other:
    cmds:
      - go run cmd/other/main.go
