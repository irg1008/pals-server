version: 3

tasks:
  tidy:
    cmds:
      - go mod tidy

  run:
    deps:
      - db:up
    cmds:
      - go run cmd/server/main.go
      - defer: db:down

  dev:
    deps:
      - db:up
    cmds:
      - wgo run -file .go cmd/server/main.go
      - defer: db:down

  # COUPLED DB-BACKEND

  start:
    run: once
    cmds:
      - docker compose --profile debug up -d

  # DB

  db:
    cmds:
      - go generate ./ent

  db:new:
    cmds:
      - go run -mod=mod entgo.io/ent/cmd/ent new {{.CLI_ARGS}}

  db:up:
    run: once
    cmds:
      - docker compose up -d

  db:down:
    run: once
    cmds:
      - docker compose down

  # PRETTIER - LINTER

  lint:
    cmds:
      - golangci-lint run --tests=false

  format:
    cmds:
      - gofmt -w -s .

  # TEST

  test:
    cmds:
      - gotestsum --format pkgname {{.ARGS}} -- {{.TEST_ARGS}} ./...

  test:watch:
    cmds:
      - task: test
        vars:
          ARGS: --watch

  test:cov:
    cmds:
      - task: test
        vars:
          TEST_ARGS: -coverprofile=out/coverage.out

  test:watch:cov:
    cmds:
      - task: test
        vars:
          TEST_ARGS: -coverprofile=out/coverage.out
          ARGS: --watch

  test:report:
    deps: [test:cover]
    cmds:
      - go tool cover -html=out/coverage.out

  # BUILD

  build:
    cmds:
      - go build -o bin/{{default "server" .NAME}} cmd/server/main.go

  build:win:
    cmds:
      - task: build
        vars:
          NAME: server.exe
    env:
      GOOS: windows
      GOARCH: amd64

  # OTHERS

  lab:
    cmds:
      - wgo run cmd/lab/main.go
